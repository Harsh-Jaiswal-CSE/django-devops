name: Deploy Django to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT: ${{ secrets.GCP_PROJECT }}
  REGION: asia-south1
  CLUSTER: django-celery-cluster   # ✅ corrected to your cluster name
  LOCATION: asia-south1
  REPO: django-repo
  IMAGE_NAME: django-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker Image
        run: |
          IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      # ✅ Fix: Install GKE Auth Plugin
      - name: Install GKE Auth Plugin
        run: |
          sudo apt-get update -y
          sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update -y
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER }} \
            --region ${{ env.LOCATION }} \
            --project ${{ env.PROJECT }}

      - name: Apply Kubernetes Manifests
        run: kubectl apply -f k8s/ -n app

      - name: Update Deployments with New Image
        run: |
          kubectl set image deployment/django-app django=$IMAGE -n app || true
          kubectl set image deployment/celery-worker celery=$IMAGE -n app || true

      - name: Wait for Rollout
        run: |
          kubectl rollout status deployment/django-app -n app --timeout=120s
          kubectl rollout status deployment/celery-worker -n app --timeout=120s
